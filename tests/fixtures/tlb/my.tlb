tmpa$_ a:# b:# = X;

bool_false$0 a:# b:(## 7) c:# = Bool;
bool_true$1 b:# = Bool; 

tmpb$_ y:(## 5) = Y;

tmpc$_ y:Y c:# = C;

tmpd#_ y:Y c:# = D;

nothing$0 {TheType:Type} = Maybe TheType;
just$1 {TheType:Type} value:TheType = Maybe TheType;
thejust$_ x:(Maybe D) = TheJust;

left$0 {X:Type} {Y:Type} value:X = Either X Y;
right$1 {X:Type} {Y:Type} value:Y = Either X Y;
pair$_ {X:Type} {Y:Type} first:X second:Y = Both X Y;

unit$_ = Unit;
//true$_ = True;

//a$_ {x:#} value:(## x) = Example x;

a$_ {x:#} value:(## x) = Example (2 + x);

a$_ t:(Example 4) = BitInteger;

unary_zero$0 = Unary ~0;
unary_succ$1 {n:#} x:(Unary ~n) = Unary ~(n + 1);

a$_ a:BitInteger = NFG;

a$_ a:^BitInteger = NFT;


a$_ t:# ^[q:#] ^[ a:(## 32) ^[e:#] ^[ b:(## 32) d:# ^[ c:(## 32) ] ] ] = A;

a$_ a:Int b:^Bits c:Uint d:int73 e:uint89 g:bits10 h:(int (e * e * 8)) f:(uint (7 * e)) i:(bits (5 + e)) j:(int 5) k:(uint e) tc:Cell {Arg:Type} arg:Arg x:Any = IntEx Arg;
a$_ x:# a:(IntEx (int (5*x))) = IntexArg;

a$_ x:(#< 4) y:(#<= 4) = LessThan;

hm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
          {n = (~m) + l} node:(HashmapNode m X) = Hashmap n X;

hmn_leaf#_ {X:Type} value:X = HashmapNode 0 X;
hmn_fork#_ {n:#} {X:Type} left:^(Hashmap n X) 
           right:^(Hashmap n X) = HashmapNode (n + 1) X;

hml_short$0 {m:#} {n:#} len:(Unary ~n) {n <= m} s:(n * Bit) = HmLabel ~n m;
hml_long$10 {m:#} n:(#<= m) s:(n * Bit) = HmLabel ~n m;
hml_same$11 {m:#} v:Bit n:(#<= m) = HmLabel ~n m;
